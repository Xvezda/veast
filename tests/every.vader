Include: common.vader

Execute (every function basic test):
  AssertEqual veast#every(1 == 1, 1 == 2), 0
  AssertEqual veast#every(1 == 2, 2 == 3), 0
  AssertEqual veast#every(1 == 1, 2 == 2, 3 == 3), 1
  AssertEqual veast#every(1 == 1, 2 == 2, 3 == 1), 0

Execute (every string evaluate test):
  AssertEqual veast#every('1 == 2'), 0
  AssertEqual veast#every('1 == 1'), 1

Execute (every list test):
  AssertEqual veast#every([1 == 1, 1 == 2]), 0
  AssertEqual veast#every([1 == 1, 2 == 2]), 1

  AssertEqual veast#every(['1 == 1', 2 == 2]), 1
  AssertEqual veast#every(['1 == 1', '2 == 2', '3 == 3']), 1

  AssertEqual veast#every([1, 1, '1']), 1
  AssertEqual veast#every([0, 1, '1']), 0

Execute (every nested list test):
  AssertEqual veast#every([1, 1, 1], [1, 1]), 1
  AssertEqual veast#every([1, 1, 1], [0, 1]), 0
  AssertEqual veast#every([1, [1, 1, 1], 1], [1 == 1, 1 == 1]), 1
  AssertEqual veast#every([1, [1, 0, 1], 1], [1 == 1, 1 == 1]), 0

Execute (every function exception test):
- Dict type not allowed
  AssertThrows veast#every({'foo': 'bar'})
  AssertThrows veast#every("{'foo': 'bar'}")
  AssertThrows veast#every([1, 1, 0, {'foo': 'bar'}])

