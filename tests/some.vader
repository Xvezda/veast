Include: common.vader

Execute (some function implementation test):
  Assert veast#some(1 == 1, 1 == 2) == 1
  Assert veast#some(1 == 2, 2 == 3) == 0

Execute (some string evaluate test):
  Assert veast#some('1 == 2') == 0
  Assert veast#some('1 == 1') == 1

Execute (some list test):
  Assert veast#some([1 == 1, 1 == 2]) == 1

  Assert veast#some(['1 == 1', 1 == 2]) == 1
  Assert veast#some(['1 == 1', '1 == 2']) == 1

  Assert veast#some([0, 0, '0']) == 0

Execute (some nested list test):
  Assert veast#some([1, 1, 1], [1, 1]) == 1
  Assert veast#some([1, 1, 1], [0, 1]) == 1

  Assert veast#some([1, [1, 1, 1], 1], [1 == 1, 1 == 1]) == 1
  Assert veast#some([1, [1, 0, 1], 1], [1 == 1, 1 == 1]) == 1

  Assert veast#some([0, [1, 0, 0], 0], [0 == 0, 0 == 0]) == 1
  Assert veast#some([0, [0, 0, 0], 0], [0 == 0, 0 == 0]) == 1


Execute (some function exception test):
- Dict type not allowed
  AssertThrows veast#some({'foo': 'bar'})
  AssertThrows veast#some("{'foo': 'bar'}")
  AssertThrows veast#some([1, 1, 0, {'foo': 'bar'}])
